services:
  oracle:
    image: gvenzl/oracle-free:23
    container_name: rayan-oracle
    restart: unless-stopped
    environment:
      ORACLE_PASSWORD: ${ORACLE_PASSWORD:-Oracle123}
      APP_USER: ${APP_USER:-ISO_APP}
      APP_USER_PASSWORD: ${APP_USER_PASSWORD:-ISO_APP_PASS}
      ORACLE_CHARACTERSET: ${ORACLE_CHARACTERSET:-AL32UTF8}
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle-data:/opt/oracle/oradata
      - ./db/init:/container-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 60
      start_period: 2m

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    depends_on:
      oracle:
        condition: service_healthy
    env_file:
      - .env
    environment:
      WAIT_FOR: ${WAIT_FOR:-oracle:1521}
      WAIT_FOR_TIMEOUT: ${WAIT_FOR_TIMEOUT:-180}
      SERVER_PORT: ${SERVER_PORT:-5000}
      JPOS_HOME: ${JPOS_HOME:-/opt/rayan-jpos/runtime}
    ports:
      - "${SERVER_PORT:-5000}:5000"
    volumes:
      - server-data:/opt/rayan-jpos/runtime
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost ${SERVER_PORT:-5000}"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    depends_on:
      server:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./scripts/wait-for-it.sh:/opt/scripts/wait-for-it.sh:ro
    entrypoint: ["/bin/sh", "-c", "/opt/scripts/wait-for-it.sh server:${ISO_SERVER_PORT:-5000} -- java $${JAVA_OPTS} -cp app.jar:lib/* org.example.client.ClientMain && touch /tmp/client_ready && tail -f /dev/null"]
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/client_ready"]
      interval: 30s
      timeout: 5s
      retries: 2
      start_period: 10s

volumes:
  oracle-data:
  server-data: